pipeline {
    agent any
 
    tools {
        maven 'maven' // Ensure this is configured in Jenkins Global Tool Configuration
    }
 
    environment {
        TOMCAT_USER = 'deployer'
        TOMCAT_PASS = 'deployer'
        TOMCAT_HOST = '13.220.44.97'
        TOMCAT_PORT = '8080'
    }
 
    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', url: 'https://github.com/sushhhhh28/ci-cd_pipeline.git'
            }
        }
 
        stage('Build with Maven') {
            steps {
                sh 'mvn clean package -Dmaven.test.failure.ignore=true'
            }
        }
 
        stage('Deploy to Tomcat') {
            steps {
                sh '''
                    curl -u $TOMCAT_USER:$TOMCAT_PASS \
                    --upload-file webapp/target/webapp.war \
                    "http://$TOMCAT_HOST:$TOMCAT_PORT/manager/text/deploy?path=/sampleapp&update=true"
                '''
            }
        }
 
        stage('Deploy to Docker Host') {
            steps {
                sshPublisher(publishers: [
                    sshPublisherDesc(
                        configName: 'docker', // Must match SSH config name in Jenkins
                        transfers: [
                            sshTransfer(
                                sourceFiles: '**/*',
                                removePrefix: '',
                                remoteDirectory: '/root/deploy',
                                execCommand: '''
                                    cd /root/deploy
                                    aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 355628581932.dkr.ecr.us-east-1.amazonaws.com
                                    docker build -t tomcat-webapp .
                                    docker tag tomcat-webapp:latest 355628581932.dkr.ecr.us-east-1.amazonaws.com/tomcat-webapp:latest
                                    docker push 355628581932.dkr.ecr.us-east-1.amazonaws.com/tomcat-webapp:latest
                                '''
                            )
                        ]
                    )
                ])
            }
        }
    }
 
    post {
        success {
            junit '**/target/surefire-reports/TEST-*.xml'
            archiveArtifacts artifacts: '**/target/*.war', fingerprint: true
        }
    }
}
